//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MC.Website.MovieReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MovieReference.IMovies")]
    public interface IMovies {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovies/Get", ReplyAction="http://tempuri.org/IMovies/GetResponse")]
        MC.ApplicationServices.DTOs.MovieDto[] Get();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovies/Get", ReplyAction="http://tempuri.org/IMovies/GetResponse")]
        System.Threading.Tasks.Task<MC.ApplicationServices.DTOs.MovieDto[]> GetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovies/Post", ReplyAction="http://tempuri.org/IMovies/PostResponse")]
        string Post(MC.ApplicationServices.DTOs.MovieDto movieDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovies/Post", ReplyAction="http://tempuri.org/IMovies/PostResponse")]
        System.Threading.Tasks.Task<string> PostAsync(MC.ApplicationServices.DTOs.MovieDto movieDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovies/Delete", ReplyAction="http://tempuri.org/IMovies/DeleteResponse")]
        string Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovies/Delete", ReplyAction="http://tempuri.org/IMovies/DeleteResponse")]
        System.Threading.Tasks.Task<string> DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovies/GetById", ReplyAction="http://tempuri.org/IMovies/GetByIdResponse")]
        MC.ApplicationServices.DTOs.MovieDto GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovies/GetById", ReplyAction="http://tempuri.org/IMovies/GetByIdResponse")]
        System.Threading.Tasks.Task<MC.ApplicationServices.DTOs.MovieDto> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovies/Edit", ReplyAction="http://tempuri.org/IMovies/EditResponse")]
        string Edit(MC.ApplicationServices.DTOs.MovieDto movieDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovies/Edit", ReplyAction="http://tempuri.org/IMovies/EditResponse")]
        System.Threading.Tasks.Task<string> EditAsync(MC.ApplicationServices.DTOs.MovieDto movieDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovies/Message", ReplyAction="http://tempuri.org/IMovies/MessageResponse")]
        string Message();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovies/Message", ReplyAction="http://tempuri.org/IMovies/MessageResponse")]
        System.Threading.Tasks.Task<string> MessageAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMoviesChannel : MC.Website.MovieReference.IMovies, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoviesClient : System.ServiceModel.ClientBase<MC.Website.MovieReference.IMovies>, MC.Website.MovieReference.IMovies {
        
        public MoviesClient() {
        }
        
        public MoviesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MoviesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MoviesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MoviesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MC.ApplicationServices.DTOs.MovieDto[] Get() {
            return base.Channel.Get();
        }
        
        public System.Threading.Tasks.Task<MC.ApplicationServices.DTOs.MovieDto[]> GetAsync() {
            return base.Channel.GetAsync();
        }
        
        public string Post(MC.ApplicationServices.DTOs.MovieDto movieDto) {
            return base.Channel.Post(movieDto);
        }
        
        public System.Threading.Tasks.Task<string> PostAsync(MC.ApplicationServices.DTOs.MovieDto movieDto) {
            return base.Channel.PostAsync(movieDto);
        }
        
        public string Delete(int id) {
            return base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public MC.ApplicationServices.DTOs.MovieDto GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<MC.ApplicationServices.DTOs.MovieDto> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public string Edit(MC.ApplicationServices.DTOs.MovieDto movieDto) {
            return base.Channel.Edit(movieDto);
        }
        
        public System.Threading.Tasks.Task<string> EditAsync(MC.ApplicationServices.DTOs.MovieDto movieDto) {
            return base.Channel.EditAsync(movieDto);
        }
        
        public string Message() {
            return base.Channel.Message();
        }
        
        public System.Threading.Tasks.Task<string> MessageAsync() {
            return base.Channel.MessageAsync();
        }
    }
}
